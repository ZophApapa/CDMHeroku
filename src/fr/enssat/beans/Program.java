//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.04 at 10:12:58 PM CET 
//


package fr.enssat.beans;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.jvnet.hyperjaxb3.item.Item;
import org.jvnet.hyperjaxb3.item.ItemUtils;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}programID"/>
 *         &lt;element ref="{}programName"/>
 *         &lt;element ref="{}programCode"/>
 *         &lt;element ref="{}webLink"/>
 *         &lt;element ref="{}programDescription"/>
 *         &lt;element ref="{}qualification"/>
 *         &lt;element ref="{}level"/>
 *         &lt;element ref="{}learningObjectives"/>
 *         &lt;element ref="{}formalPrerequisites"/>
 *         &lt;element ref="{}teachingPlace"/>
 *         &lt;element ref="{}infoBlock"/>
 *         &lt;element ref="{}programStructure"/>
 *         &lt;element ref="{}subProgram" maxOccurs="unbounded"/>
 *         &lt;element ref="{}searchword" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" use="required" type="{http://www.w3.org/2001/XMLSchema}NCName" />
 *       &lt;attribute name="ident" use="required" type="{http://www.w3.org/2001/XMLSchema}NCName" />
 *       &lt;attribute name="userDefined" use="required" type="{http://www.w3.org/2001/XMLSchema}NCName" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "programID",
    "programName",
    "programCode",
    "webLink",
    "programDescription",
    "qualification",
    "level",
    "learningObjectives",
    "formalPrerequisites",
    "teachingPlace",
    "infoBlock",
    "programStructure",
    "subProgram",
    "searchword"
})
@XmlRootElement(name = "program")
@Entity(name = "Program")
@Table(name = "PROGRAM")
@Inheritance(strategy = InheritanceType.JOINED)
public class Program
    implements Equals, HashCode
{

    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String programID;
    @XmlElement(required = true)
    protected Text programName;
    @XmlElement(required = true)
    protected ProgramCode programCode;
    @XmlElement(required = true)
    protected WebLink webLink;
    @XmlElement(required = true)
    protected ProgramDescription programDescription;
    @XmlElement(required = true)
    protected Qualification qualification;
    @XmlElement(required = true)
    protected String level;
    @XmlElement(required = true)
    protected LearningObjectives learningObjectives;
    @XmlElement(required = true)
    protected FormalPrerequisites formalPrerequisites;
    @XmlElement(required = true)
    protected TeachingPlace teachingPlace;
    @XmlElement(required = true)
    protected InfoBlock infoBlock;
    @XmlElement(required = true)
    protected ProgramStructure programStructure;
    @XmlElement(required = true)
    protected List<SubProgram> subProgram;
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected List<String> searchword;
    @XmlAttribute(name = "id", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String id;
    @XmlAttribute(name = "ident", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String ident;
    @XmlAttribute(name = "userDefined", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String userDefined;
    @XmlTransient
    protected Long hjid;
    protected transient List<Program.ProgramSearchwordItem> searchwordItems;

    /**
     * Gets the value of the programID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "PROGRAMID", length = 255)
    public String getProgramID() {
        return programID;
    }

    /**
     * Sets the value of the programID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProgramID(String value) {
        this.programID = value;
    }

    /**
     * Gets the value of the programName property.
     * 
     * @return
     *     possible object is
     *     {@link Text }
     *     
     */
    @ManyToOne(targetEntity = Text.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PROGRAMNAME_PROGRAM_HJID")
    public Text getProgramName() {
        return programName;
    }

    /**
     * Sets the value of the programName property.
     * 
     * @param value
     *     allowed object is
     *     {@link Text }
     *     
     */
    public void setProgramName(Text value) {
        this.programName = value;
    }

    /**
     * Gets the value of the programCode property.
     * 
     * @return
     *     possible object is
     *     {@link ProgramCode }
     *     
     */
    @ManyToOne(targetEntity = ProgramCode.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PROGRAMCODE_PROGRAM_HJID")
    public ProgramCode getProgramCode() {
        return programCode;
    }

    /**
     * Sets the value of the programCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProgramCode }
     *     
     */
    public void setProgramCode(ProgramCode value) {
        this.programCode = value;
    }

    /**
     * Gets the value of the webLink property.
     * 
     * @return
     *     possible object is
     *     {@link WebLink }
     *     
     */
    @ManyToOne(targetEntity = WebLink.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "WEBLINK_PROGRAM_HJID")
    public WebLink getWebLink() {
        return webLink;
    }

    /**
     * Sets the value of the webLink property.
     * 
     * @param value
     *     allowed object is
     *     {@link WebLink }
     *     
     */
    public void setWebLink(WebLink value) {
        this.webLink = value;
    }

    /**
     * Gets the value of the programDescription property.
     * 
     * @return
     *     possible object is
     *     {@link ProgramDescription }
     *     
     */
    @ManyToOne(targetEntity = ProgramDescription.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PROGRAMDESCRIPTION_PROGRAM_H_0")
    public ProgramDescription getProgramDescription() {
        return programDescription;
    }

    /**
     * Sets the value of the programDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProgramDescription }
     *     
     */
    public void setProgramDescription(ProgramDescription value) {
        this.programDescription = value;
    }

    /**
     * Gets the value of the qualification property.
     * 
     * @return
     *     possible object is
     *     {@link Qualification }
     *     
     */
    @ManyToOne(targetEntity = Qualification.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "QUALIFICATION_PROGRAM_HJID")
    public Qualification getQualification() {
        return qualification;
    }

    /**
     * Sets the value of the qualification property.
     * 
     * @param value
     *     allowed object is
     *     {@link Qualification }
     *     
     */
    public void setQualification(Qualification value) {
        this.qualification = value;
    }

    /**
     * Gets the value of the level property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LEVEL_", length = 255)
    public String getLevel() {
        return level;
    }

    /**
     * Sets the value of the level property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLevel(String value) {
        this.level = value;
    }

    /**
     * Gets the value of the learningObjectives property.
     * 
     * @return
     *     possible object is
     *     {@link LearningObjectives }
     *     
     */
    @ManyToOne(targetEntity = LearningObjectives.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LEARNINGOBJECTIVES_PROGRAM_H_0")
    public LearningObjectives getLearningObjectives() {
        return learningObjectives;
    }

    /**
     * Sets the value of the learningObjectives property.
     * 
     * @param value
     *     allowed object is
     *     {@link LearningObjectives }
     *     
     */
    public void setLearningObjectives(LearningObjectives value) {
        this.learningObjectives = value;
    }

    /**
     * Gets the value of the formalPrerequisites property.
     * 
     * @return
     *     possible object is
     *     {@link FormalPrerequisites }
     *     
     */
    @ManyToOne(targetEntity = FormalPrerequisites.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "FORMALPREREQUISITES_PROGRAM__0")
    public FormalPrerequisites getFormalPrerequisites() {
        return formalPrerequisites;
    }

    /**
     * Sets the value of the formalPrerequisites property.
     * 
     * @param value
     *     allowed object is
     *     {@link FormalPrerequisites }
     *     
     */
    public void setFormalPrerequisites(FormalPrerequisites value) {
        this.formalPrerequisites = value;
    }

    /**
     * Gets the value of the teachingPlace property.
     * 
     * @return
     *     possible object is
     *     {@link TeachingPlace }
     *     
     */
    @ManyToOne(targetEntity = TeachingPlace.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TEACHINGPLACE_PROGRAM_HJID")
    public TeachingPlace getTeachingPlace() {
        return teachingPlace;
    }

    /**
     * Sets the value of the teachingPlace property.
     * 
     * @param value
     *     allowed object is
     *     {@link TeachingPlace }
     *     
     */
    public void setTeachingPlace(TeachingPlace value) {
        this.teachingPlace = value;
    }

    /**
     * Gets the value of the infoBlock property.
     * 
     * @return
     *     possible object is
     *     {@link InfoBlock }
     *     
     */
    @ManyToOne(targetEntity = InfoBlock.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "INFOBLOCK_PROGRAM_HJID")
    public InfoBlock getInfoBlock() {
        return infoBlock;
    }

    /**
     * Sets the value of the infoBlock property.
     * 
     * @param value
     *     allowed object is
     *     {@link InfoBlock }
     *     
     */
    public void setInfoBlock(InfoBlock value) {
        this.infoBlock = value;
    }

    /**
     * Gets the value of the programStructure property.
     * 
     * @return
     *     possible object is
     *     {@link ProgramStructure }
     *     
     */
    @ManyToOne(targetEntity = ProgramStructure.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PROGRAMSTRUCTURE_PROGRAM_HJID")
    public ProgramStructure getProgramStructure() {
        return programStructure;
    }

    /**
     * Sets the value of the programStructure property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProgramStructure }
     *     
     */
    public void setProgramStructure(ProgramStructure value) {
        this.programStructure = value;
    }

    /**
     * Gets the value of the subProgram property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the subProgram property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSubProgram().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SubProgram }
     * 
     * 
     */
    @OneToMany(targetEntity = SubProgram.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SUBPROGRAM_PROGRAM_HJID")
    public List<SubProgram> getSubProgram() {
        if (subProgram == null) {
            subProgram = new ArrayList<SubProgram>();
        }
        return this.subProgram;
    }

    /**
     * 
     * 
     */
    public void setSubProgram(List<SubProgram> subProgram) {
        this.subProgram = subProgram;
    }

    /**
     * Gets the value of the searchword property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the searchword property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSearchword().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    @Transient
    public List<String> getSearchword() {
        if (searchword == null) {
            searchword = new ArrayList<String>();
        }
        return this.searchword;
    }

    /**
     * 
     * 
     */
    public void setSearchword(List<String> searchword) {
        this.searchword = searchword;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ID", length = 255)
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the ident property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "IDENT", length = 255)
    public String getIdent() {
        return ident;
    }

    /**
     * Sets the value of the ident property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIdent(String value) {
        this.ident = value;
    }

    /**
     * Gets the value of the userDefined property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "USERDEFINED", length = 255)
    public String getUserDefined() {
        return userDefined;
    }

    /**
     * Sets the value of the userDefined property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserDefined(String value) {
        this.userDefined = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    @OneToMany(targetEntity = Program.ProgramSearchwordItem.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SEARCHWORDITEMS_PROGRAM_HJID")
    public List<Program.ProgramSearchwordItem> getSearchwordItems() {
        if (this.searchwordItems == null) {
            this.searchwordItems = new ArrayList<Program.ProgramSearchwordItem>();
        }
        if (ItemUtils.shouldBeWrapped(this.searchword)) {
            this.searchword = ItemUtils.wrap(this.searchword, this.searchwordItems, Program.ProgramSearchwordItem.class);
        }
        return this.searchwordItems;
    }

    public void setSearchwordItems(List<Program.ProgramSearchwordItem> value) {
        this.searchword = null;
        this.searchwordItems = null;
        this.searchwordItems = value;
        if (this.searchwordItems == null) {
            this.searchwordItems = new ArrayList<Program.ProgramSearchwordItem>();
        }
        if (ItemUtils.shouldBeWrapped(this.searchword)) {
            this.searchword = ItemUtils.wrap(this.searchword, this.searchwordItems, Program.ProgramSearchwordItem.class);
        }
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Program)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Program that = ((Program) object);
        {
            String lhsProgramID;
            lhsProgramID = this.getProgramID();
            String rhsProgramID;
            rhsProgramID = that.getProgramID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "programID", lhsProgramID), LocatorUtils.property(thatLocator, "programID", rhsProgramID), lhsProgramID, rhsProgramID)) {
                return false;
            }
        }
        {
            Text lhsProgramName;
            lhsProgramName = this.getProgramName();
            Text rhsProgramName;
            rhsProgramName = that.getProgramName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "programName", lhsProgramName), LocatorUtils.property(thatLocator, "programName", rhsProgramName), lhsProgramName, rhsProgramName)) {
                return false;
            }
        }
        {
            ProgramCode lhsProgramCode;
            lhsProgramCode = this.getProgramCode();
            ProgramCode rhsProgramCode;
            rhsProgramCode = that.getProgramCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "programCode", lhsProgramCode), LocatorUtils.property(thatLocator, "programCode", rhsProgramCode), lhsProgramCode, rhsProgramCode)) {
                return false;
            }
        }
        {
            WebLink lhsWebLink;
            lhsWebLink = this.getWebLink();
            WebLink rhsWebLink;
            rhsWebLink = that.getWebLink();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "webLink", lhsWebLink), LocatorUtils.property(thatLocator, "webLink", rhsWebLink), lhsWebLink, rhsWebLink)) {
                return false;
            }
        }
        {
            ProgramDescription lhsProgramDescription;
            lhsProgramDescription = this.getProgramDescription();
            ProgramDescription rhsProgramDescription;
            rhsProgramDescription = that.getProgramDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "programDescription", lhsProgramDescription), LocatorUtils.property(thatLocator, "programDescription", rhsProgramDescription), lhsProgramDescription, rhsProgramDescription)) {
                return false;
            }
        }
        {
            Qualification lhsQualification;
            lhsQualification = this.getQualification();
            Qualification rhsQualification;
            rhsQualification = that.getQualification();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "qualification", lhsQualification), LocatorUtils.property(thatLocator, "qualification", rhsQualification), lhsQualification, rhsQualification)) {
                return false;
            }
        }
        {
            String lhsLevel;
            lhsLevel = this.getLevel();
            String rhsLevel;
            rhsLevel = that.getLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "level", lhsLevel), LocatorUtils.property(thatLocator, "level", rhsLevel), lhsLevel, rhsLevel)) {
                return false;
            }
        }
        {
            LearningObjectives lhsLearningObjectives;
            lhsLearningObjectives = this.getLearningObjectives();
            LearningObjectives rhsLearningObjectives;
            rhsLearningObjectives = that.getLearningObjectives();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "learningObjectives", lhsLearningObjectives), LocatorUtils.property(thatLocator, "learningObjectives", rhsLearningObjectives), lhsLearningObjectives, rhsLearningObjectives)) {
                return false;
            }
        }
        {
            FormalPrerequisites lhsFormalPrerequisites;
            lhsFormalPrerequisites = this.getFormalPrerequisites();
            FormalPrerequisites rhsFormalPrerequisites;
            rhsFormalPrerequisites = that.getFormalPrerequisites();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "formalPrerequisites", lhsFormalPrerequisites), LocatorUtils.property(thatLocator, "formalPrerequisites", rhsFormalPrerequisites), lhsFormalPrerequisites, rhsFormalPrerequisites)) {
                return false;
            }
        }
        {
            TeachingPlace lhsTeachingPlace;
            lhsTeachingPlace = this.getTeachingPlace();
            TeachingPlace rhsTeachingPlace;
            rhsTeachingPlace = that.getTeachingPlace();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "teachingPlace", lhsTeachingPlace), LocatorUtils.property(thatLocator, "teachingPlace", rhsTeachingPlace), lhsTeachingPlace, rhsTeachingPlace)) {
                return false;
            }
        }
        {
            InfoBlock lhsInfoBlock;
            lhsInfoBlock = this.getInfoBlock();
            InfoBlock rhsInfoBlock;
            rhsInfoBlock = that.getInfoBlock();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "infoBlock", lhsInfoBlock), LocatorUtils.property(thatLocator, "infoBlock", rhsInfoBlock), lhsInfoBlock, rhsInfoBlock)) {
                return false;
            }
        }
        {
            ProgramStructure lhsProgramStructure;
            lhsProgramStructure = this.getProgramStructure();
            ProgramStructure rhsProgramStructure;
            rhsProgramStructure = that.getProgramStructure();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "programStructure", lhsProgramStructure), LocatorUtils.property(thatLocator, "programStructure", rhsProgramStructure), lhsProgramStructure, rhsProgramStructure)) {
                return false;
            }
        }
        {
            List<SubProgram> lhsSubProgram;
            lhsSubProgram = (((this.subProgram!= null)&&(!this.subProgram.isEmpty()))?this.getSubProgram():null);
            List<SubProgram> rhsSubProgram;
            rhsSubProgram = (((that.subProgram!= null)&&(!that.subProgram.isEmpty()))?that.getSubProgram():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subProgram", lhsSubProgram), LocatorUtils.property(thatLocator, "subProgram", rhsSubProgram), lhsSubProgram, rhsSubProgram)) {
                return false;
            }
        }
        {
            List<String> lhsSearchword;
            lhsSearchword = (((this.searchword!= null)&&(!this.searchword.isEmpty()))?this.getSearchword():null);
            List<String> rhsSearchword;
            rhsSearchword = (((that.searchword!= null)&&(!that.searchword.isEmpty()))?that.getSearchword():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "searchword", lhsSearchword), LocatorUtils.property(thatLocator, "searchword", rhsSearchword), lhsSearchword, rhsSearchword)) {
                return false;
            }
        }
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            String lhsIdent;
            lhsIdent = this.getIdent();
            String rhsIdent;
            rhsIdent = that.getIdent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ident", lhsIdent), LocatorUtils.property(thatLocator, "ident", rhsIdent), lhsIdent, rhsIdent)) {
                return false;
            }
        }
        {
            String lhsUserDefined;
            lhsUserDefined = this.getUserDefined();
            String rhsUserDefined;
            rhsUserDefined = that.getUserDefined();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userDefined", lhsUserDefined), LocatorUtils.property(thatLocator, "userDefined", rhsUserDefined), lhsUserDefined, rhsUserDefined)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theProgramID;
            theProgramID = this.getProgramID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "programID", theProgramID), currentHashCode, theProgramID);
        }
        {
            Text theProgramName;
            theProgramName = this.getProgramName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "programName", theProgramName), currentHashCode, theProgramName);
        }
        {
            ProgramCode theProgramCode;
            theProgramCode = this.getProgramCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "programCode", theProgramCode), currentHashCode, theProgramCode);
        }
        {
            WebLink theWebLink;
            theWebLink = this.getWebLink();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "webLink", theWebLink), currentHashCode, theWebLink);
        }
        {
            ProgramDescription theProgramDescription;
            theProgramDescription = this.getProgramDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "programDescription", theProgramDescription), currentHashCode, theProgramDescription);
        }
        {
            Qualification theQualification;
            theQualification = this.getQualification();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "qualification", theQualification), currentHashCode, theQualification);
        }
        {
            String theLevel;
            theLevel = this.getLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "level", theLevel), currentHashCode, theLevel);
        }
        {
            LearningObjectives theLearningObjectives;
            theLearningObjectives = this.getLearningObjectives();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "learningObjectives", theLearningObjectives), currentHashCode, theLearningObjectives);
        }
        {
            FormalPrerequisites theFormalPrerequisites;
            theFormalPrerequisites = this.getFormalPrerequisites();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "formalPrerequisites", theFormalPrerequisites), currentHashCode, theFormalPrerequisites);
        }
        {
            TeachingPlace theTeachingPlace;
            theTeachingPlace = this.getTeachingPlace();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "teachingPlace", theTeachingPlace), currentHashCode, theTeachingPlace);
        }
        {
            InfoBlock theInfoBlock;
            theInfoBlock = this.getInfoBlock();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "infoBlock", theInfoBlock), currentHashCode, theInfoBlock);
        }
        {
            ProgramStructure theProgramStructure;
            theProgramStructure = this.getProgramStructure();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "programStructure", theProgramStructure), currentHashCode, theProgramStructure);
        }
        {
            List<SubProgram> theSubProgram;
            theSubProgram = (((this.subProgram!= null)&&(!this.subProgram.isEmpty()))?this.getSubProgram():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subProgram", theSubProgram), currentHashCode, theSubProgram);
        }
        {
            List<String> theSearchword;
            theSearchword = (((this.searchword!= null)&&(!this.searchword.isEmpty()))?this.getSearchword():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "searchword", theSearchword), currentHashCode, theSearchword);
        }
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            String theIdent;
            theIdent = this.getIdent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ident", theIdent), currentHashCode, theIdent);
        }
        {
            String theUserDefined;
            theUserDefined = this.getUserDefined();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userDefined", theUserDefined), currentHashCode, theUserDefined);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @Entity(name = "Program$ProgramSearchwordItem")
    @Table(name = "PROGRAMSEARCHWORDITEM")
    @Inheritance(strategy = InheritanceType.JOINED)
    public static class ProgramSearchwordItem
        implements Item<String>
    {

        @XmlElement(name = "searchword")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        @XmlSchemaType(name = "NCName")
        protected String item;
        @XmlTransient
        protected Long hjid;

        /**
         * Gets the value of the item property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        @Basic
        @Column(name = "ITEM", length = 255)
        public String getItem() {
            return item;
        }

        /**
         * Sets the value of the item property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setItem(String value) {
            this.item = value;
        }

        /**
         * Gets the value of the hjid property.
         * 
         * @return
         *     possible object is
         *     {@link Long }
         *     
         */
        @Id
        @Column(name = "HJID")
        @GeneratedValue(strategy = GenerationType.AUTO)
        public Long getHjid() {
            return hjid;
        }

        /**
         * Sets the value of the hjid property.
         * 
         * @param value
         *     allowed object is
         *     {@link Long }
         *     
         */
        public void setHjid(Long value) {
            this.hjid = value;
        }

    }

}
