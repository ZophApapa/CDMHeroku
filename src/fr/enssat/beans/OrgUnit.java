//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.04 at 10:12:58 PM CET 
//


package fr.enssat.beans;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}orgUnitID"/>
 *         &lt;element ref="{}orgUnitName"/>
 *         &lt;element ref="{}orgUnitAcronym"/>
 *         &lt;element ref="{}orgUnitKind"/>
 *         &lt;element ref="{}webLink"/>
 *         &lt;element ref="{}orgUnitDescription"/>
 *         &lt;element ref="{}contacts"/>
 *       &lt;/sequence>
 *       &lt;attribute name="language" use="required" type="{http://www.w3.org/2001/XMLSchema}NCName" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "orgUnitID",
    "orgUnitName",
    "orgUnitAcronym",
    "orgUnitKind",
    "webLink",
    "orgUnitDescription",
    "contacts"
})
@XmlRootElement(name = "orgUnit")
@Entity(name = "OrgUnit")
@Table(name = "ORGUNIT")
@Inheritance(strategy = InheritanceType.JOINED)
public class OrgUnit
    implements Equals, HashCode
{

    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    protected String orgUnitID;
    @XmlElement(required = true)
    protected Text orgUnitName;
    @XmlElement(required = true)
    protected String orgUnitAcronym;
    @XmlElement(required = true)
    protected OrgUnitKind orgUnitKind;
    @XmlElement(required = true)
    protected WebLink webLink;
    @XmlElement(required = true)
    protected OrgUnitDescription orgUnitDescription;
    @XmlElement(required = true)
    protected Contacts contacts;
    @XmlAttribute(name = "language", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String language;
    @XmlTransient
    protected Long hjid;

    /**
     * Gets the value of the orgUnitID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ORGUNITID", length = 255)
    public String getOrgUnitID() {
        return orgUnitID;
    }

    /**
     * Sets the value of the orgUnitID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOrgUnitID(String value) {
        this.orgUnitID = value;
    }

    /**
     * Gets the value of the orgUnitName property.
     * 
     * @return
     *     possible object is
     *     {@link Text }
     *     
     */
    @ManyToOne(targetEntity = Text.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ORGUNITNAME_ORGUNIT_HJID")
    public Text getOrgUnitName() {
        return orgUnitName;
    }

    /**
     * Sets the value of the orgUnitName property.
     * 
     * @param value
     *     allowed object is
     *     {@link Text }
     *     
     */
    public void setOrgUnitName(Text value) {
        this.orgUnitName = value;
    }

    /**
     * Gets the value of the orgUnitAcronym property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "ORGUNITACRONYM", length = 255)
    public String getOrgUnitAcronym() {
        return orgUnitAcronym;
    }

    /**
     * Sets the value of the orgUnitAcronym property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOrgUnitAcronym(String value) {
        this.orgUnitAcronym = value;
    }

    /**
     * Gets the value of the orgUnitKind property.
     * 
     * @return
     *     possible object is
     *     {@link OrgUnitKind }
     *     
     */
    @ManyToOne(targetEntity = OrgUnitKind.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ORGUNITKIND_ORGUNIT_HJID")
    public OrgUnitKind getOrgUnitKind() {
        return orgUnitKind;
    }

    /**
     * Sets the value of the orgUnitKind property.
     * 
     * @param value
     *     allowed object is
     *     {@link OrgUnitKind }
     *     
     */
    public void setOrgUnitKind(OrgUnitKind value) {
        this.orgUnitKind = value;
    }

    /**
     * Gets the value of the webLink property.
     * 
     * @return
     *     possible object is
     *     {@link WebLink }
     *     
     */
    @ManyToOne(targetEntity = WebLink.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "WEBLINK_ORGUNIT_HJID")
    public WebLink getWebLink() {
        return webLink;
    }

    /**
     * Sets the value of the webLink property.
     * 
     * @param value
     *     allowed object is
     *     {@link WebLink }
     *     
     */
    public void setWebLink(WebLink value) {
        this.webLink = value;
    }

    /**
     * Gets the value of the orgUnitDescription property.
     * 
     * @return
     *     possible object is
     *     {@link OrgUnitDescription }
     *     
     */
    @ManyToOne(targetEntity = OrgUnitDescription.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ORGUNITDESCRIPTION_ORGUNIT_H_0")
    public OrgUnitDescription getOrgUnitDescription() {
        return orgUnitDescription;
    }

    /**
     * Sets the value of the orgUnitDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link OrgUnitDescription }
     *     
     */
    public void setOrgUnitDescription(OrgUnitDescription value) {
        this.orgUnitDescription = value;
    }

    /**
     * Gets the value of the contacts property.
     * 
     * @return
     *     possible object is
     *     {@link Contacts }
     *     
     */
    @ManyToOne(targetEntity = Contacts.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONTACTS_ORGUNIT_HJID")
    public Contacts getContacts() {
        return contacts;
    }

    /**
     * Sets the value of the contacts property.
     * 
     * @param value
     *     allowed object is
     *     {@link Contacts }
     *     
     */
    public void setContacts(Contacts value) {
        this.contacts = value;
    }

    /**
     * Gets the value of the language property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LANGUAGE_", length = 255)
    public String getLanguage() {
        return language;
    }

    /**
     * Sets the value of the language property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLanguage(String value) {
        this.language = value;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof OrgUnit)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final OrgUnit that = ((OrgUnit) object);
        {
            String lhsOrgUnitID;
            lhsOrgUnitID = this.getOrgUnitID();
            String rhsOrgUnitID;
            rhsOrgUnitID = that.getOrgUnitID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orgUnitID", lhsOrgUnitID), LocatorUtils.property(thatLocator, "orgUnitID", rhsOrgUnitID), lhsOrgUnitID, rhsOrgUnitID)) {
                return false;
            }
        }
        {
            Text lhsOrgUnitName;
            lhsOrgUnitName = this.getOrgUnitName();
            Text rhsOrgUnitName;
            rhsOrgUnitName = that.getOrgUnitName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orgUnitName", lhsOrgUnitName), LocatorUtils.property(thatLocator, "orgUnitName", rhsOrgUnitName), lhsOrgUnitName, rhsOrgUnitName)) {
                return false;
            }
        }
        {
            String lhsOrgUnitAcronym;
            lhsOrgUnitAcronym = this.getOrgUnitAcronym();
            String rhsOrgUnitAcronym;
            rhsOrgUnitAcronym = that.getOrgUnitAcronym();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orgUnitAcronym", lhsOrgUnitAcronym), LocatorUtils.property(thatLocator, "orgUnitAcronym", rhsOrgUnitAcronym), lhsOrgUnitAcronym, rhsOrgUnitAcronym)) {
                return false;
            }
        }
        {
            OrgUnitKind lhsOrgUnitKind;
            lhsOrgUnitKind = this.getOrgUnitKind();
            OrgUnitKind rhsOrgUnitKind;
            rhsOrgUnitKind = that.getOrgUnitKind();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orgUnitKind", lhsOrgUnitKind), LocatorUtils.property(thatLocator, "orgUnitKind", rhsOrgUnitKind), lhsOrgUnitKind, rhsOrgUnitKind)) {
                return false;
            }
        }
        {
            WebLink lhsWebLink;
            lhsWebLink = this.getWebLink();
            WebLink rhsWebLink;
            rhsWebLink = that.getWebLink();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "webLink", lhsWebLink), LocatorUtils.property(thatLocator, "webLink", rhsWebLink), lhsWebLink, rhsWebLink)) {
                return false;
            }
        }
        {
            OrgUnitDescription lhsOrgUnitDescription;
            lhsOrgUnitDescription = this.getOrgUnitDescription();
            OrgUnitDescription rhsOrgUnitDescription;
            rhsOrgUnitDescription = that.getOrgUnitDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "orgUnitDescription", lhsOrgUnitDescription), LocatorUtils.property(thatLocator, "orgUnitDescription", rhsOrgUnitDescription), lhsOrgUnitDescription, rhsOrgUnitDescription)) {
                return false;
            }
        }
        {
            Contacts lhsContacts;
            lhsContacts = this.getContacts();
            Contacts rhsContacts;
            rhsContacts = that.getContacts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contacts", lhsContacts), LocatorUtils.property(thatLocator, "contacts", rhsContacts), lhsContacts, rhsContacts)) {
                return false;
            }
        }
        {
            String lhsLanguage;
            lhsLanguage = this.getLanguage();
            String rhsLanguage;
            rhsLanguage = that.getLanguage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "language", lhsLanguage), LocatorUtils.property(thatLocator, "language", rhsLanguage), lhsLanguage, rhsLanguage)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theOrgUnitID;
            theOrgUnitID = this.getOrgUnitID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orgUnitID", theOrgUnitID), currentHashCode, theOrgUnitID);
        }
        {
            Text theOrgUnitName;
            theOrgUnitName = this.getOrgUnitName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orgUnitName", theOrgUnitName), currentHashCode, theOrgUnitName);
        }
        {
            String theOrgUnitAcronym;
            theOrgUnitAcronym = this.getOrgUnitAcronym();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orgUnitAcronym", theOrgUnitAcronym), currentHashCode, theOrgUnitAcronym);
        }
        {
            OrgUnitKind theOrgUnitKind;
            theOrgUnitKind = this.getOrgUnitKind();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orgUnitKind", theOrgUnitKind), currentHashCode, theOrgUnitKind);
        }
        {
            WebLink theWebLink;
            theWebLink = this.getWebLink();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "webLink", theWebLink), currentHashCode, theWebLink);
        }
        {
            OrgUnitDescription theOrgUnitDescription;
            theOrgUnitDescription = this.getOrgUnitDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "orgUnitDescription", theOrgUnitDescription), currentHashCode, theOrgUnitDescription);
        }
        {
            Contacts theContacts;
            theContacts = this.getContacts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contacts", theContacts), currentHashCode, theContacts);
        }
        {
            String theLanguage;
            theLanguage = this.getLanguage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "language", theLanguage), currentHashCode, theLanguage);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
